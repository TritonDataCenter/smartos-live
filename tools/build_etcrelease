#!/bin/bash
#
#
# This file and its contents are supplied under the terms of the
# Common Development and Distribution License ("CDDL"), version 1.0.
# You may only use this file in accordance with the terms of version
# 1.0 of the CDDL.
#
# A full copy of the text of the CDDL should have accompanied this
# source.  A copy of the CDDL is also available via the Internet at
# http://www.illumos.org/license/CDDL.
#

#
# Copyright (c) 2013, Joyent, Inc. All rights reserved.
#
shopt -s xpg_echo
set -o pipefail

ber_arg0=$(basename $0)
ber_wsroot=
ber_nent=0

function fatal
{
	local msg="$*"
	[[ -z "$msg" ]] && msg="failed"
	echo "$ber_arg0: $msg" >&2
	exit 1
}

function warn
{
	local msg="$*"
	[[ -z "$msg" ]] && msg="failed"
	echo "$ber_arg0: $msg" >&2
}

function get_status
{
	local dir=$1 name=$2 cont=$3
	local branch rev comdate name url

	[[ -z "$dir" ]] && fatal "missing directory argument"
	[[ -z "$name" ]] && fatal "missing name"
	[[ -d $dir ]] || fatal "asked to get status of non-existant directory"
	cd $dir || fatal "failed to enter $dir"
	((ber_nent++))

	printf "\t"
	[[ $ber_nent -gt 1 ]] && printf ", "

	#
	# This means that we have a local project that isn't a git directory.
	# Yay team. In this case we just give them a date and move on with life.
	#
	if [[ ! -d .git ]]; then
		comdate=$(date +%s)
		[[ $? -eq 0 ]] || fatal "failed to get current date"
		warn "no git repository information available"
		printf "%s%s\n" "{ \"repo\": \"$name\", \"date\": " \
		    "\"$comdate\", \"warning\": \"no git metadata available\" }"
		cd - >/dev/null
		return 0
	fi
	
	url=$(git config remote.origin.url)
	[[ $? -eq 0 ]] || fatal "failed to get git origin url"
	branch=$(git branch | grep "^* " | cut -d ' ' -f2-)
	[[ $? -eq 0 ]] || fatal "failed to get git branch"
	rev=$(git rev-parse HEAD)
	[[ $? -eq 0 ]] || fatal "failed to get current revision"
	comdate=$(git log -n 1 --pretty=format:%ct HEAD)
	[[ $? -eq 0 ]] || fatal "failed to get commit date"
	printf "%s%s%s\n" "{ \"repo\": \"$name\", \"branch\": \"$branch\", " \
	     "\"rev\": \"$rev\", \"commit_date\": \"$comdate\", \"url\": " \
	     "\"$url\" }"
	cd - >/dev/null
	return 0
}

cd $(dirname $0)/../
ber_wsroot=$PWD

printf "[\n"
get_status $ber_wsroot smartos-live
get_status $ber_wsroot/projects/illumos illumos-joyent
get_status $ber_wsroot/projects/illumos-extra illumos-extra
for d in $ber_wsroot/projects/local/*; do
	get_status $d $(basename $d)
done

# if the smartos overlay exists and is in use, include it
[[ -d $ber_wsroot/overlay/smartos ]] && \
    grep -q $ber_wsroot/overlay/smartos $ber_wsroot/overlay/order && \
    get_status $ber_wsroot/overlay/smartos smartos-overlay
printf "]\n"
