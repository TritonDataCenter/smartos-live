#!/bin/sh
#
# Run `gtar` in a chroot to guard against symlink/hardlink break outs.
#
# Limitation: This doesn't guard against multiple concurrent runs in the same
# or child/parent dirs.
#

if [[ -n "$TRACE" ]]; then
    export PS4='${BASH_SOURCE}:${LINENO}: '
    set -o xtrace
fi
set -o errexit
set -o pipefail


function fatal
{
    echo "$0: fatal error: $*" >&2
    exit 1
}

function onexit
{
    if [[ -n "$ROOTDIR" ]]; then
        for path in $TO_UMOUNT; do
            [[ -e "$path" ]] && umount $path
        done
        for path in $TO_REMOVE; do
            [[ -e "$path" ]] && rm -rf $path
        done
    fi
    exit $1
}

function usage
{
    echo "usage: chroot-gtar ROOTDIR SUBDIR TARBALL COMPRESION [GTAR-ARGS...]" >&2
    echo "" >&2
    echo "'ROOTDIR' is the base dir of the chroot. 'SUBDIR' is a path" >&2
    echo "relative to ROOTDIR that is passed to gtar as '-C SUBDIR'." >&2
    echo "It is suggested a SUBDIR other than '.' is always used to avoid" >&2
    echo "conflict with the '$ROOTDIR/lib' and '$ROOTDIR/chroot-tools-$PID'" >&2
    echo "support dirs created for the chroot environment." >&2
    echo "" >&2
    echo "'COMPRESSION' is one of 'none', 'gzip', 'bzip2' or 'xv'." >&2
    echo "" >&2
    echo "example:" >&2
    echo "    ./chroot-gtar /zones/foo root /var/tmp/archive.tar.xz xz" >&2
}



#---- mainline

ROOTDIR=$1
if [[ -z "$ROOTDIR" ]]; then
    usage
    exit 1
fi
shift

SUBDIR=$1
if [[ -z "$SUBDIR" ]]; then
    usage
    exit 1
fi
shift

TARBALL=$1
if [[ -z "$TARBALL" ]]; then
    usage
    exit 1
fi
shift

COMPRESSION=$1
if [[ -z "$COMPRESSION" ]]; then
    usage
    exit 1
fi
shift

GTARARGS="$*"


trap 'onexit $?' EXIT

TO_UMOUNT=
TO_REMOVE=
CHROOTBIN=chroot-bin-$$
BINDIR=$ROOTDIR/$CHROOTBIN
LIBDIR=$ROOTDIR/lib
TO_REMOVE="$TO_REMOVE $BINDIR $LIBDIR"

if [[ -e $LIBDIR ]]; then
    fatal "conflict: $LIBDIR exists"
fi
mkdir -p $LIBDIR

cp $TARBALL $ROOTDIR/
TO_REMOVE="$TO_REMOVE $ROOTDIR/$(basename $TARBALL)"

rm -rf $BINDIR
mkdir $BINDIR
cp /usr/img/sbin/gtar-unlink-dir $BINDIR/
CMDS="gtar"
CMDS="$CMDS cat gzip bzip2 xzcat"
CMDS="$CMDS bash rm grep sed tee"
for cmd in $CMDS; do
    cp $(which $cmd) $BINDIR/
done

mkdir -p $LIBDIR
libs="/lib/ld.so.1
    $(for cmd in $CMDS; do ldd $(which $cmd); done \
        | awk '{print $3}' | sort | uniq)
    "
for lib in $libs; do
    cp $lib $LIBDIR/
done

TO_UMOUNT="$TO_UMOUNT $ROOTDIR/proc $ROOTDIR/dev/fd"
TO_REMOVE="$TO_REMOVE $ROOTDIR/proc $ROOTDIR/dev/fd"
mkdir -p $ROOTDIR/proc
mount -F proc proc $ROOTDIR/proc
[[ ! -e $ROOTDIR/dev ]] && TO_REMOVE="$TO_REMOVE $ROOTDIR/dev"
mkdir -p $ROOTDIR/dev/fd
mount -F fd fd $ROOTDIR/dev/fd

TRACE=$TRACE LC_ALL=C PATH=/$CHROOTBIN:$PATH /usr/sbin/chroot $ROOTDIR \
    /$CHROOTBIN/bash /$CHROOTBIN/gtar-unlink-dir "$SUBDIR" "$(basename "$TARBALL")" "$COMPRESSION" $GTARARGS
