#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License, Version 1.0 only
# (the "License").  You may not use this file except in compliance
# with the License.
#
# You can obtain a copy of the license at COPYING
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at COPYING.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
# Copyright (c) 2019, Joyent, Inc.
#

#
# MG runs make check prior to ./configure, so allow build.env not to exist.
#
ifeq ($(MAKECMDGOALS),check)
-include	$(BASE)/../build.env
else
include		$(BASE)/../build.env
endif

DESTDIR =	$(BASE)/../proto
NATIVEDIR =	$(BASE)/../proto.strap
ILLUMOS_SRC =	$(BASE)/../projects/illumos/usr/src

BUILDSTAMP =	$(shell cat $(BASE)/../proto/buildstamp)

ifeq ($(shell uname -s),Darwin)
MAKE =		make
PATH =		$(DESTDIR)/usr/bin:/bin:/usr/bin:/usr/sbin:/sbin:/opt/local/bin:/usr/local/bin
else
MAKE =		gmake
PATH =		$(NATIVEDIR)/usr/bin:/usr/bin:/usr/sbin:/sbin:/opt/local/bin
endif

MAX_JOBS =	128
PARALLEL =	-j$(MAX_JOBS)
CSTYLE =	$(BASE)/../tools/cstyle
GCC =		$(NATIVEDIR)/usr/bin/gcc
GXX =		$(NATIVEDIR)/usr/bin/g++

CTFBINDIR =	$(ILLUMOS_SRC)/tools/proto/root_i386-nd/opt/onbld/bin/i386
CTFMERGE =	$(CTFBINDIR)/ctfmerge
CTFCONVERT =	$(CTFBINDIR)/ctfconvert

SYSINCDIRS =	/usr/include
SYSLIBDIRS =	/usr/lib /lib

CPPFLAGS =	$(SYSINCDIRS:%=-isystem $(DESTDIR)/%)
LDFLAGS =	$(SYSLIBDIRS:%=-L$(DESTDIR)/%) -Wl,-zassert-deflib \
		    -Wl,-zfatal-warnings

PREFIX_NODE =	$(DESTDIR)/usr/node/0.10
NODE_EXEC =	$(NATIVEDIR)/usr/node/0.10/bin/node

DEBUG_FLAGS =	-g
WARN_FLAGS =	-Wall -Wextra -Werror
PIC_FLAGS =	-fPIC

OPT_FLAGS = -O2

#
# Avoid GCC's overly aggressive optimizations. We don't know of any specific
# instances this causes problems, so this is just in case.
#
ifneq ($(PRIMARY_COMPILER_VER),4)
OPT_FLAGS += -fno-aggressive-loop-optimizations
endif

CFLAGS =	-std=gnu99 $(WARN_FLAGS) $(OPT_FLAGS)
CXXFLAGS =	$(WARN_FLAGS) $(OPT_FLAGS)
NODE_CFLAGS =	$(DEBUG_FLAGS) $(PIC_FLAGS)
NODE_CXXFLAGS =	$(DEBUG_FLAGS) $(PIC_FLAGS)

STD_DEFS =	-D_GNU_SOURCE
NODE_DEFS =	-DBUILDING_NODE_EXTENSION
LF64_DEFS =	-D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64
PIC_DEFS =	-DPIC
NODE_INCS =	-isystem $(PREFIX_NODE)/include/node -I.

NODE_CPPFLAGS =	$(STD_DEFS) $(NODE_DEFS) $(LF64_DEFS) $(PIC_DEFS) $(NODE_INCS)

SHARED_FLAGS =	-shared
ZTEXT =		-Wl,-ztext
NODE_LIBDIR =	-L$(PREFIX_NODE)/lib

NODE_LDFLAGS =	$(SHARED_FLAGS) $(ZTEXT) $(NODE_LIBDIR)

STRINGS_DIR =	$(BASE)/common/strings
DOCKER_DIR =	$(BASE)/dockerinit

INSTALL_PROG =	mkdir -p $(@D) && rm -f $@ && cp $^ $@ && \
		chmod 755 $@ && touch $@

COMPILE.c =	$(GCC) $(CPPFLAGS) $(CFLAGS) -o $@ -c
LINK.c =	$(GCC) $(CPPFLAGS) $(CFLAGS) $(LDFLAGS) -o $@
COMPILE.cc =	$(GXX) $(CPPFLAGS) $(CXXFLAGS) -o $@ -c
LINK.cc =	$(GXX) $(CPPFLAGS) $(CXXFLAGS) $(LDFLAGS) -o $@

MDATA_OBJS = \
		mdata_dynstr.o \
		mdata_proto.o \
		mdata_common.o \
		mdata_base64.o \
		mdata_crc32.o \
		mdata_reqid.o \
		mdata_sunos.o \
		mdata_unix_common.o
